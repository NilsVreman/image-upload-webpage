import{D as p,r as d,k as l,e as i}from"./index-lxKFhPlO.js";const u=["image/jpeg","image/png","image/jpg","image/gif","image/webp","image/HEIC"],f=50*1024*1024,c=s=>s.map(o=>({...o,uploaded_at:new Date(o.uploaded_at)})),g=s=>[...s].sort((o,m)=>m.uploaded_at.getTime()-o.uploaded_at.getTime()),w=p("imageStore",()=>{const s=d([]),o=d([]),m=l(()=>{const e=g(s.value),a=new Set(e.map(t=>t.name)),r=g(o.value.filter(t=>!a.has(t.name)));return[...e,...r]}),n=async()=>{const e=await i.get("/images/thumbnails").then(a=>c(a.data.images)).catch(a=>(console.error("Error fetching images:",a),[]));o.value=e};return{images:m,updateImageMetaData:n,uploadImages:async e=>{const a=new FormData;e.forEach(t=>a.append("files",t));const r=await i.post("/images",a,{headers:{"Content-Type":"multipart/form-data"}}).then(t=>c(t.data.images)).catch(t=>(console.error("Error uploading images:",t),[]));s.value=r,await n()},filterValidImages:e=>e?[...e].filter(({type:a,size:r})=>u.includes(a)&&r<=f):[]}});export{u as a,w as u};
