map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

upstream backend {
    server webapp:3000;
}

# HTTP
server {
    listen 80;
    server_name nils-and-elins-wedding.se www.nils-and-elins-wedding.se;

    # Forward challenges to certbot
    location ^~ /.well-known/acme-challenge/ {
        root /usr/share/nginx/html;
    }

    # Forward everything else to https
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS
server {
    listen 443 ssl http2;
    server_name nils-and-elins-wedding.se www.nils-and-elins-wedding.se;

    ssl_certificate         /etc/letsencrypt/live/nils-and-elins-wedding.se/fullchain.pem;
    ssl_certificate_key     /etc/letsencrypt/live/nils-and-elins-wedding.se/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/nils-and-elins-wedding.se/chain.pem;
    ssl_protocols           TLSv1.3 TLSv1.2;
    ssl_prefer_server_ciphers on;

    include /etc/nginx/options/security_headers.conf;

    location / {
        proxy_pass         http://backend;
        proxy_http_version 1.1;
        proxy_set_header   Host              $host;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;

        # For websockets
        proxy_set_header   Upgrade           $http_upgrade;
        proxy_set_header   Connection        $connection_upgrade;
    }
}

